<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btOk.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJdnBBZwAAACAAAAAgAIf6nJ0AAAABYktHRN7pbuKbAAAAJXRFWHRkYXRlOmNyZWF0ZQAyMDEw
        LTAyLTExVDAxOjIwOjIxLTA2OjAwtZnToAAAACV0RVh0ZGF0ZTptb2RpZnkAMjAwNi0xMC0wMVQwMDo1
        NjoxMC0wNTowMHjNMkQAAAQaSURBVFhHY2AYBaMhQIcQMAqRYaSDNdit8KzW9MzbYX81oF03le6O8KzR
        jG286fGj/YH//5Z7Xv9C+vQbXcvUmGjuELscJUa/Nu2Shjvuf/ofxvxf+rz2/9THKf8b73n8j5xlNMel
        TJWVZo6wyVJkCp6k1113x/Vf/8O4/4ueVcLx1Edp/+vuuP2PW2qyxblMhYfqjrDJVmCLmGuwqPqW0//+
        B/H/5z0pxcBTHqb/r77l/D95vdkJqwwF7I5wLFPSdW9US7UrVCQ6voBqeWOWGm6vuOHwv+9+/P+Zjwqw
        4skP0v6D1KRtN79qkSongBEKDuVK1tnHLN4WX7P5HzRNe659qSLB+LItUhCPW2t0svS63f+eu3H/pzzI
        wopBciA1sauMjtnmK4hgWG5TKO+RfdL8c/k1p/8NN/3/F1yx/B8yR2eDTZE8F674si6QV07YYnSj6KrN
        /87b0f/776Zgxa23woDmWf0PX6S3zbYQS9DbliqEZZ4x/V5y1eF/x+0YoGGx/xtuBP7PvWT2P2KF3iHL
        PFkhdEdY5soaJu81epp/2ep/661wsB5suPa67/8coDmBM7WWmGfIsGN4xq5SITX9rPHvwst2/5tuhAJx
        GBzXXPP7n3nB5H/Uer2LFnkyMjDNVoWyzsmHDd/nXrT433A9GEUPsv7SK67/My4Y//PoUp1gmibNjGG5
        cZqUfepZw7/p543/11zzx4orrnr+Tztv+D9qi849y2IZDasS2bCk4/rfsi6Y/a++6otTX95Fm/+p5wz+
        OtQpVpukS2EvjvXjJVhcu5SmJp7R+Zd93up/2WV3IPbAwMWXXP4nn9X/H71H+13iSd3f6edM/pdewq4W
        JJ5xzvQ/SJ1NpVw6wfyuFyfOaFsrVxd3Sutvyhmj//kXHLDi3PN2/1PPGv9PP2uKU03eefv/iaf1/scc
        1vpmUSQdQtByZAUWZdIZkUfVf8Wd1P6fcdYCiC1JwulnzP9Hn9T4H7ZH/YNxtqQzSZbDFBvnSgSH7lf5
        Gn5c9X/CKcP/iUTihJMG/8OOKf8P3Kzy3ChL3IQsy2GaDDLFHQK2K70LOqLwP/K45v+o41p4ceQxjf+B
        R+T++6xRumuQJaZOkeUwzbrJovreGxSe+B6S/h98ROl/yBFlrDjosOJ/30NS/z2WKlzUSRGBZ1OqOEI7
        SVjJbYncdc8D4v99D8oAsSwK9jko/R8k5zxH7rBWshBGQUUVR2gmCYk5zpY54bZP5L/7PrH/HvvFwRjE
        dt8n+t92gvRmrVQhbqpYhssQ9XgBXtvJUtud9wj9d9ojCMYue4X/W3ZJLFJPEGCjqeUww5Uj+NjNO8UX
        O+4GOmC30D+TBtF+tVh+zKKVlq5RCuVjMqwUqdArEs5XjecfuJYuLT05avbICwEA8x/B5+oVsRAAAAAA
        SUVORK5CYII=
</value>
  </data>
</root>